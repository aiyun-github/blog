(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{299:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://leetcode.cn/leetbook/read/illustration-of-algorithm/r84gmi/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《图解算法数据结构》"),s("OutboundLink")],1),t._v("笔记\n链接："),s("a",{attrs:{href:"https://leetcode.cn/leetbook/read/illustration-of-algorithm/50e446/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode.cn/leetbook/read/illustration-of-algorithm/50e446/"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_1-算法复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-算法复杂度"}},[t._v("#")]),t._v(" 1.算法复杂度")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/jpeg/12532486/1678780173706-485ec482-36d2-45e7-bf3c-869fa2f150a3.jpeg",alt:""}}),t._v("\n算法复杂度旨在计算在输入数据量 "),s("em",[t._v("N")]),t._v(" 的情况下，算法的「时间使用」和「空间使用」情况；体现算法运行使用的时间和空间随「数据大小 "),s("em",[t._v("N")]),t._v(" 」而增大的速度。")]),t._v(" "),s("h3",{attrs:{id:"_1-1-时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-时间复杂度"}},[t._v("#")]),t._v(" 1.1 时间复杂度")]),t._v(" "),s("p",[t._v("常见时间复杂度有：\n"),s("code",[t._v("_O_(1)<_O_(log_N_)<_O_(_N_)<_O_(_N_log_N_)<_O_(_N_2)<_O_(2_N_)<_O_(_N_!)")]),t._v(" "),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678780277407-aa262f84-b537-439b-b76c-5e22983b0f57.png#averageHue=%23fafafa&clientId=uc8439251-2f05-4&from=paste&height=1242&id=u9e7bec43&originHeight=1242&originWidth=1654&originalType=binary&ratio=1&rotation=0&showTitle=false&size=150473&status=done&style=none&taskId=ua6f47a03-0a49-4053-9782-2467a36f63c&title=&width=1654",alt:"image.png"}})]),t._v(" "),s("h4",{attrs:{id:"常数-o-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常数-o-1"}},[t._v("#")]),t._v(" 常数 O(1) :")]),t._v(" "),s("p",[t._v("运行次数与N 大小呈常数关系，即不随输入数据大小N 的变化而变化。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" N\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"线性-o-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性-o-n"}},[t._v("#")]),t._v(" 线性_O_("),s("em",[t._v("N")]),t._v(") ：")]),t._v(" "),s("p",[t._v("循环运行次数与_N_ 大小呈线性关系，时间复杂度为_O_("),s("em",[t._v("N")]),t._v(") 。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("对于以下代码，虽然是两层循环，但第二层与_N_ 大小无关，因此整体仍与_N_ 呈线性关系。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"平方-o-n-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平方-o-n-2"}},[t._v("#")]),t._v(" 平方_O_(_N_2) ：")]),t._v(" "),s("p",[t._v("两层循环相互独立，都与_N_ 呈线性关系，因此总体与_N_ 呈平方关系，时间复杂度为_O_(_N_2) 。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h4",{attrs:{id:"指数-o-2-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指数-o-2-n"}},[t._v("#")]),t._v(" 指数_O_(2_N_) ：")]),t._v(" "),s("p",[t._v("生物学科中的 “细胞分裂” 即是指数级增长。初始状态为 11 个细胞，分裂一轮后为 22 个，分裂两轮后为4 个，……，分裂_N_ 轮后有2_N_ 个细胞。\n算法中，指数阶常出现于递归，算法原理图与代码如下所示。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    count_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" algorithm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    count_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" algorithm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" count_2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678784551632-d4d0ec0d-efc4-427d-860b-a0a9ec019a45.png#averageHue=%230d0e0d&clientId=uc8439251-2f05-4&from=paste&height=762&id=ue62d5bfc&originHeight=762&originWidth=1352&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57904&status=done&style=none&taskId=u8ee0e8cf-10b4-4ec6-a6de-016c7cfacb2&title=&width=1352",alt:"image.png"}})]),t._v(" "),s("h4",{attrs:{id:"阶乘-o-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阶乘-o-n"}},[t._v("#")]),t._v(" 阶乘_O_("),s("em",[t._v("N")]),t._v("!) ：")]),t._v(" "),s("p",[t._v("阶乘阶对应数学上常见的 “全排列” 。即给定_N_ 个互不重复的元素，求其所有可能的排列方案，则方案数量为：\n"),s("code",[t._v("_N_×(_N_−1)×(_N_−2)×⋯×2×1=_N_!")]),t._v("\n如下图与代码所示，阶乘常使用递归实现，算法原理：第一层分裂出_N_ 个，第二层分裂出_N_−1个，…… ，直至到第_N_ 层时终止并回溯。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" algorithm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678785059142-dc2ce66f-48f0-42ca-a091-ffa5f6c28367.png#averageHue=%235b5e5c&clientId=uc8439251-2f05-4&from=paste&height=893&id=u2814976f&originHeight=893&originWidth=1585&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62599&status=done&style=none&taskId=u00d65095-f845-4500-a32b-83be95cbb08&title=&width=1585",alt:"image.png"}})]),t._v(" "),s("h4",{attrs:{id:"对数-o-log-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数-o-log-n"}},[t._v("#")]),t._v(" 对数_O_(log_N_) ：")]),t._v(" "),s("p",[t._v("对数阶与指数阶相反，指数阶为 “每轮分裂出两倍的情况” ，而对数阶是 “每轮排除一半的情况” 。对数阶常出现于「二分法」、「分治」等算法中，体现着 “一分为二” 或 “一分为多” 的算法思想。\n设循环次数为_m_ ，则输入数据大小_N_ 与2^"),s("em",[t._v("m")]),t._v(" 呈线性关系，两边同时取_log_2 对数，则得到循环次数_m_\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678786975543-3b92efe7-ebe0-489e-9905-b3c47edb26f8.png#averageHue=%23e8e8e8&clientId=uc8439251-2f05-4&from=paste&height=116&id=u688ac31b&originHeight=116&originWidth=1456&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45012&status=done&style=none&taskId=u641e28ca-c4b9-4c4e-ad93-8957b5946f6&title=&width=1456",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" N\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n        count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("如下图所示，为二分查找的时间复杂度示意图，每次二分将搜索区间缩小一半。\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678787089475-cac71f67-be4d-43ef-91e4-7af79f6b949b.png#averageHue=%23111211&clientId=uc8439251-2f05-4&from=paste&height=850&id=u6820d215&originHeight=850&originWidth=1510&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63143&status=done&style=none&taskId=ube798b80-8683-484e-8938-27600bae788&title=&width=1510",alt:"image.png"}})]),t._v(" "),s("h4",{attrs:{id:"线性对数-o-n-log-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性对数-o-n-log-n"}},[t._v("#")]),t._v(" 线性对数_O_("),s("em",[t._v("N_log_N")]),t._v(") ：")]),t._v(" "),s("p",[t._v("两层循环相互独立，第一层和第二层时间复杂度分别为_O_(log_N_) 和_O_("),s("em",[t._v("N")]),t._v(") ，则总体时间复杂度为_O_("),s("em",[t._v("N_log_N")]),t._v(") ；")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("algorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" N\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("线性对数阶常出现于排序算法，例如「快速排序」、「归并排序」、「堆排序」等，其时间复杂度原理如下图所示。\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678787385502-f188c693-38a1-496e-b104-c62b172e3434.png#averageHue=%23f8eeec&clientId=uc8439251-2f05-4&from=paste&height=1093&id=u418af333&originHeight=1093&originWidth=1940&originalType=binary&ratio=1&rotation=0&showTitle=false&size=115997&status=done&style=none&taskId=u8485f8f4-389d-4489-a8d3-628eac9a32e&title=&width=1940",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"_1-2-空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-空间复杂度"}},[t._v("#")]),t._v(" 1.2 空间复杂度")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678791792482-8143a99d-18ad-46a4-b6fc-80034b103b52.png#averageHue=%23fbeae5&clientId=u1ce3c87f-2660-4&from=paste&height=1076&id=ucc1a2487&originHeight=1076&originWidth=1433&originalType=binary&ratio=1&rotation=0&showTitle=false&size=76732&status=done&style=none&taskId=u75f500da-8709-4776-ab3f-ef710dee50b&title=&width=1433",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"_2-数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据结构"}},[t._v("#")]),t._v(" 2.数据结构")]),t._v(" "),s("p",[t._v("数据结构是为实现对计算机数据有效使用的各种数据组织形式，服务于各类计算机操作。不同的数据结构具有各自对应的适用场景，旨在降低各种算法计算的时间与空间复杂度，达到最佳的任务执行效率。\n"),s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/png/12532486/1678874995488-645f9767-2a2d-4a86-8512-3d51fdf8bcbe.png#averageHue=%23f9f8f8&clientId=u1ce3c87f-2660-4&from=paste&height=1036&id=u32b5205d&originHeight=1036&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=108417&status=done&style=none&taskId=u3350e7ab-1a45-4547-8f83-86d72b810dd&title=&width=1380",alt:"image.png"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);